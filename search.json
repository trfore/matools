[{"path":"https://trfore.github.io/matools/articles/workflow_evoked_ap.html","id":"pre-processing-experiment-parameters","dir":"Articles","previous_headings":"","what":"Pre-processing: Experiment Parameters","title":"Example Workflow: Evoked Action Potentials","text":"convenient batch processing, can store experiment parameters (e.g. sweep/trial number agonist) csv file. generate blank template, use create_parameter_template().","code":"matools::create_parameter_template()"},{"path":"https://trfore.github.io/matools/articles/workflow_evoked_ap.html","id":"data-processing","dir":"Articles","previous_headings":"","what":"Data Processing","title":"Example Workflow: Evoked Action Potentials","text":"First, load package example data. package works best parameters variables stored within common environment easily referenced sequential functions. generate matools_env, run set_pkg_environment(). set parameter values run following: Next, sequentially load (.asc) file tibble; calculate additional values; aggregate modified tibble collection called data_collection.","code":"library(matools)  example_data <- system.file(\"extdata/demo_data\",   package = \"matools\",   mustWork = TRUE )  example_parameters <- system.file(\"extdata/demo_data\",   \"demo_data_project_parameters.csv\",   package = \"matools\",   mustWork = TRUE ) set_pkg_environment(force_new = TRUE)  set_data_directory(example_data) import_experiment_parameters(example_parameters)  # check for missing .asc files or experiment parameters import_check_missing_info(   dir_filenames = matools_env$files_in_folder,   parameters = matools_env$parameters,   skip_prompt = TRUE ) #> matools_env$files_to_process created for (filename in matools_env$files_to_process) {   message(paste(\"Processing File:\", filename))    data <- asc_to_tibble(     file_path = file.path(matools_env$directory_data, paste(filename, \".ASC\", sep = \"\"))   )    # set experiment parameters for a single file   set_experiment_parameters(parameters = matools_env$parameters, filename = filename)    # modify the data frame   calculate_stimulus_times(     stimulus_time_first = matools_env$stimulus_time_of_first,     stimulus_count = matools_env$stimulus_count,     stimulus_isi = matools_env$stimulus_isi   )    data <- add_sweep_number_to_rows(     df = data,     sweep_duration = matools_env$sweep_duration_sec,     sweep_count = matools_env$sweep_total,     time_ref = \"rec_time_ms\"   )    data <- insert_rows_for_missing_sweeps(     df = data,     sweep_count = matools_env$sweep_total   )    data <- standardize_event_time(     df = data,     sweep_duration = matools_env$sweep_duration_sec,     time_ref = \"rec_time_ms\"   )    data <- add_stimulus_index(     df = data,     time_of_stim = matools_env$time_of_stimuli,     isi = matools_env$stimulus_isi,     sweep_count = matools_env$sweep_total,     recovery_stim = matools_env$stimulus_time_of_recovery   )    data <- add_event_index(data)    data <- add_event_jitter(     df = data,     to_rise = FALSE   )    user_parameters <- tibble::tibble(     condition_start = matools_env$condition_starts,     condition_end = matools_env$condition_ends,     condition = matools_env$condition_names   )   data <- add_condition_tag(     df = data,     parameters = user_parameters   )    df_histo <-     create_histogram_df(       df = data,       time_of_stim = matools_env$time_of_stimuli,       condition_names = matools_env$condition_names,       bin_size = 1,       window_size = 50,       first_bin_on_stim = FALSE,       one_event_per_bin = FALSE     )    # aggregate data for plotting   if (!exists(\"data_collection\")) {     data_collection <-       tibble::tibble(         cell_id = filename,         experiment_id = matools_env$experiment_id,         data_events = list(data),         data_histogram = list(df_histo)       )   } else {     data_collection <-       tibble::add_row(         data_collection,         cell_id = filename,         experiment_id = matools_env$experiment_id,         data_events = list(data),         data_histogram = list(df_histo)       )   } } #> Processing File: cell1 #> Processing File: cell2"},{"path":"https://trfore.github.io/matools/articles/workflow_evoked_ap.html","id":"data-plotting","dir":"Articles","previous_headings":"","what":"Data Plotting","title":"Example Workflow: Evoked Action Potentials","text":"Now, let’s extract single experiment aggregated data, \"cell1\". Finally, let’s plot spike raster example cell.","code":"library(magrittr, include.only = \"%>%\")  plot_data <- data_collection %>%   dplyr::filter(experiment_id == \"exp_typeB\") %>%   dplyr::filter(cell_id == \"cell1\") %>%   dplyr::select(\"data_events\") %>%   tidyr::unnest(\"data_events\") plot_spike_raster(   df = plot_data,   filename = \"cell1\",   id = \"exp_typeB\",   time_of_stim = c(415.5, 425.5, 435.5),   condition_names = unique(na.omit(plot_data$condition)) )"},{"path":"https://trfore.github.io/matools/articles/workflow_evoked_ap.html","id":"additional-references","dir":"Articles","previous_headings":"","what":"Additional References","title":"Example Workflow: Evoked Action Potentials","text":"example modified analysis_evoked_ap(), viewable within R Rstudio via getAnywhere(analysis_evoked_ap()) available github https://github.com/trfore/matools/blob/main/R/workflows.R","code":""},{"path":"https://trfore.github.io/matools/articles/workflow_evoked_psp.html","id":"pre-processing-experiment-parameters","dir":"Articles","previous_headings":"","what":"Pre-processing: Experiment Parameters","title":"Example Workflow: Evoked Postsynaptic Potentials (or Currents)","text":"convenient batch processing, can store experiment parameters (e.g. sweep/trial number agonist) csv file. generate blank template, use create_parameter_template().","code":"matools::create_parameter_template()"},{"path":"https://trfore.github.io/matools/articles/workflow_evoked_psp.html","id":"data-processing","dir":"Articles","previous_headings":"","what":"Data Processing","title":"Example Workflow: Evoked Postsynaptic Potentials (or Currents)","text":"First, load package example data. package works best parameters variables stored within common environment easily referenced sequential functions. generate matools_env, run set_pkg_environment(). set parameter values run following: Note: example ’ll process data \"cell2\", personal workflows, can separate different experiments creating distinct data folders experiment parameter (.csv) files. Next, sequentially load (.asc) file tibble; calculate additional values; aggregate modified tibble collection called data_collection.","code":"library(matools)  example_data <- system.file(\"extdata/demo_data\",   package = \"matools\",   mustWork = TRUE )  example_parameters <- system.file(\"extdata/demo_data\",   \"demo_data_project_parameters.csv\",   package = \"matools\",   mustWork = TRUE ) set_pkg_environment(force_new = TRUE)  # load the example data and parameters set_data_directory(example_data) import_experiment_parameters(example_parameters)  # check for missing .asc files or experiment parameters import_check_missing_info(   dir_filenames = matools_env$files_in_folder,   parameters = matools_env$parameters,   skip_prompt = TRUE ) #> matools_env$files_to_process created # example only: only process relevant data matools_env$files_to_process <- \"cell2\" for (filename in matools_env$files_to_process) {   message(paste(\"Processing File:\", filename))    data <- asc_to_tibble(     file_path = file.path(matools_env$directory_data, paste(filename, \".ASC\", sep = \"\"))   )   set_experiment_parameters(matools_env$parameters, filename)    # modify the data frame   calculate_stimulus_times(     stimulus_time_first = matools_env$stimulus_time_of_first,     stimulus_count = matools_env$stimulus_count,     stimulus_isi = matools_env$stimulus_isi   )    data <- add_sweep_number_to_rows(     df = data,     sweep_duration = matools_env$sweep_duration_sec,     sweep_count = matools_env$sweep_total,     time_ref = \"rec_time_ms\"   )    data <- insert_rows_for_missing_sweeps(     df = data,     sweep_count = matools_env$sweep_total   )    data <- standardize_event_time(     df = data,     sweep_duration = matools_env$sweep_duration_sec,     time_ref = \"rec_time_ms\"   )    data <- add_stimulus_index(     df = data,     time_of_stim = matools_env$time_of_stimuli,     isi = matools_env$stimulus_isi,     sweep_count = matools_env$sweep_total,     recovery_stim = matools_env$stimulus_time_of_recovery   )    data <- add_event_index(data)    user_parameters <- dplyr::tibble(     condition_start = matools_env$condition_starts,     condition_end = matools_env$condition_ends,     condition = matools_env$condition_names   )   data <- add_condition_tag(     df = data,     parameters = user_parameters   )    data <- add_event_jitter(     df = data,     to_rise = FALSE   )    data <- add_normalized_amplitude(     df = data,     normalize_condition = \"control\",     normalize_stimulus = 1   )    data <- add_ppr(     df = data,     column_ref = \"amplitude_normalized\"   )    # aggregate data for plotting   if (!exists(\"data_collection\")) {     data_collection <-       tibble::tibble(         cell_id = filename,         experiment_id = matools_env$experiment_id,         data_events = list(data)       )   } else {     data_collection <-       tibble::add_row(         data_collection,         cell_id = filename,         experiment_id = matools_env$experiment_id,         data_events = list(data)       )   } } #> Processing File: cell2"},{"path":"https://trfore.github.io/matools/articles/workflow_evoked_psp.html","id":"data-plotting","dir":"Articles","previous_headings":"","what":"Data Plotting","title":"Example Workflow: Evoked Postsynaptic Potentials (or Currents)","text":"Now, let’s extract single experiment aggregated data, \"cell2\", look first postsynaptic current experimental stimulus, .e. filter(stimulus == 1). Finally, let’s plot amplitudes example cell.","code":"library(magrittr, include.only = \"%>%\")  plot_data <- data_collection %>%   dplyr::filter(experiment_id == \"exp_typeC\") %>%   dplyr::filter(cell_id == \"cell2\") %>%   dplyr::select(\"data_events\") %>%   tidyr::unnest(\"data_events\") %>%   dplyr::filter(stimulus == 1) plot_scatterplot_amplitude(   df = plot_data,   sweep_duration = 5,   ymax = 250,   y_label = \"amplitude (pA)\" )"},{"path":"https://trfore.github.io/matools/articles/workflow_evoked_psp.html","id":"additional-references","dir":"Articles","previous_headings":"","what":"Additional References","title":"Example Workflow: Evoked Postsynaptic Potentials (or Currents)","text":"example modified analysis_evoked_psp(), viewable within R Rstudio via getAnywhere(analysis_evoked_psp()) available github https://github.com/trfore/matools/blob/main/R/workflows.R","code":""},{"path":"https://trfore.github.io/matools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"https://trfore.github.io/matools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"c, \"taylor.r.fore@gmail.com\" e=, c)) c= (2023). matools: Mini Analysis Toolkit R. https://github.com/trfore/matools, https://trfore.github.io/matools/.","code":"@Manual{,   title = {matools: Mini Analysis Toolkit for R},   author = {{c} and email = \"taylor.r.fore@gmail.com\" and comment = c))},   year = {2023},   note = {https://github.com/trfore/matools, https://trfore.github.io/matools/}, }"},{"path":"https://trfore.github.io/matools/index.html","id":"matools","dir":"","previous_headings":"","what":"Mini Analysis Toolkit for R","title":"Mini Analysis Toolkit for R","text":"package provides set tools transform (.asc) files exported Mini Analysis (Synaptosoft) R data objects; calculate plot common metrics used neuroscience. Mini Analysis Synaptosoft widely used program among neuroscientist automatically detect (manually select) synaptic events electrophysiological recordings. software still executes latest windows OS, Windows 10, longer actively developed several features work. Users still able export core file (*.asc) perform manual analysis. R package, matools, designed automate analysis provide functional figures. package created solve following problems: Import synaptosoft’s files (*.asc) data.frame/tibbles wide-spread analysis within R. Additionally, can directly convert .asc .csv file proper column names. Extract transform raw values common metrics within neuroscience community including: Inter-event Interval (ms) Paired-Pulse Ratio (PPR) Jitter (ms) Generate standard set graphs quick analysis, including: Amplitude heatmaps & scatterplots User-defined metric (e.g. amplitude, failure-rate, ect…) group average Spike rasters analysis package also expandable automatically check run analysis new data file meta file entry added public Google Sheets file via R Package googlesheets. See github.com/trfore/chat-project documentation working example; help page import_experiment_parameters(). Additionally, graphs (.pdf) used publication Fore et al. 2020 (DOI: https://doi.org/10.1523/JNEUROSCI.2148-19.2020) can generated modified fit analysis. See github.com/trfore/chat-project documentation generating modifying figures.","code":""},{"path":"https://trfore.github.io/matools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Mini Analysis Toolkit for R","text":"latest development version can installed github:","code":"# install.packages(\"devtools\") devtools::install_github(\"trfore/matools\")"},{"path":"https://trfore.github.io/matools/index.html","id":"matools-example","dir":"","previous_headings":"","what":"matools Example","title":"Mini Analysis Toolkit for R","text":"Basic example import demo .asc file; add sweep stimulus numbers; plot amplitude first event stimulus. complex data processing workflows provided R/workflows.R viewable within R calling getAnywhere() analysis_evoked_ap() analysis_evoked_psp(). Alternatively, read package articles https://trfore.github.io/matools/articles/. Additionally, see github.com/trfore/chat-project full analysis workflows.","code":"library(matools)  test_file_path <- system.file(\"extdata/demo_data\",   \"cell2.ASC\",   package = \"matools\",   mustWork = TRUE ) test_param_path <- system.file(\"extdata/demo_data\",   \"demo_data_project_parameters.csv\",   package = \"matools\",   mustWork = TRUE )  # load and modify the data test_df <- asc_to_tibble(file_path = test_file_path, merge_iei = FALSE)  # create env to store data parameters set_pkg_environment(force_new = TRUE) import_experiment_parameters(file = test_param_path) set_experiment_parameters(matools_env$parameters, filename = \"cell2\")  test_df <- add_sweep_number_to_rows(   df = test_df,   sweep_duration = matools_env$sweep_duration_sec,   sweep_count = matools_env$sweep_total,   time_ref = \"rec_time_ms\" )  test_df <- add_stimulus_index(   df = test_df,   time_of_stim = c(478.3, 518.3),   isi = 40,   sweep_count = 281,   add_missing = TRUE )  # create drug parameter matrix experiment_parameters <- dplyr::tibble(   condition_start = matools_env$condition_starts,   condition_end = matools_env$condition_ends,   condition = matools_env$condition_names )  test_df <- add_condition_tag(   df = test_df,   parameters = experiment_parameters )  View(test_df)  # simple plot plot_data <- test_df %>% dplyr::filter(stimulus == 1) plot_scatterplot_amplitude(df = plot_data, sweep_duration = 5, ymax = 250)"},{"path":"https://trfore.github.io/matools/reference/add_condition_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Condition Tag To Data Frame — add_condition_tag","title":"Add Condition Tag To Data Frame — add_condition_tag","text":"Adds condition tag data frame allowing analysis based upon tag","code":""},{"path":"https://trfore.github.io/matools/reference/add_condition_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Condition Tag To Data Frame — add_condition_tag","text":"","code":"add_condition_tag(df, parameters)"},{"path":"https://trfore.github.io/matools/reference/add_condition_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Condition Tag To Data Frame — add_condition_tag","text":"df Data Frame Tibble, following columns: sweep parameters Data Frame Tibble experiment parameters, expected columns follows: condition_start - Integer condition_end - Integer condition - Character","code":""},{"path":"https://trfore.github.io/matools/reference/add_condition_tag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Condition Tag To Data Frame — add_condition_tag","text":"Data Frame Tibble additional column: condition.","code":""},{"path":"https://trfore.github.io/matools/reference/add_condition_tag.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Condition Tag To Data Frame — add_condition_tag","text":"Uncategorized events default NA.","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/add_condition_tag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Condition Tag To Data Frame — add_condition_tag","text":"","code":"simple_tbl <- tibble::tibble(sweep = as.ordered(rep(1:5, each = 2))) user_drug_args <-   tibble::tribble(     ~condition_start, ~condition_end, ~condition,     1, 2, \"control\",     4, 5, \"drug_1\"   )  add_condition_tag(   df = simple_tbl,   parameters = user_drug_args ) #> # A tibble: 10 × 2 #>    sweep condition #>    <ord> <chr>     #>  1 1     control   #>  2 1     control   #>  3 2     control   #>  4 2     control   #>  5 3     NA        #>  6 3     NA        #>  7 4     drug_1    #>  8 4     drug_1    #>  9 5     drug_1    #> 10 5     drug_1"},{"path":"https://trfore.github.io/matools/reference/add_event_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Event Index To Data Frame — add_event_index","title":"Add Event Index To Data Frame — add_event_index","text":"Several events may occur response experimental stimulus, function add sub-index allowing segregation -th event n-th stimulus.","code":""},{"path":"https://trfore.github.io/matools/reference/add_event_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Event Index To Data Frame — add_event_index","text":"","code":"add_event_index(df)"},{"path":"https://trfore.github.io/matools/reference/add_event_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Event Index To Data Frame — add_event_index","text":"df Data Frame Tibble following columns: amplitude sweep stimulus","code":""},{"path":"https://trfore.github.io/matools/reference/add_event_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Event Index To Data Frame — add_event_index","text":"Data Frame Tibble event index numbers column event_index.","code":""},{"path":"https://trfore.github.io/matools/reference/add_event_index.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Event Index To Data Frame — add_event_index","text":"first event given stimulus always start index value 1. multiple events occur, iterative index created. events occur, index takes NA value.","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/add_event_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Event Index To Data Frame — add_event_index","text":"","code":"simple_tbl <- tibble::tibble(   sweep = as.ordered(c(1, 1, 1, 1, 2, 2, 2, 2, 2)),   time_ms = c(405, 408, NA, 445, seq(405, 445, 10)),   amplitude = c(100, 100, NA, 100, 100, 100, 100, 100, 100),   stimulus = ordered(c(1, 1, 2, \"r\", 1, 2, \"o\", \"o\", \"r\"), levels = c(1, 2, \"o\", \"r\")) ) add_event_index(simple_tbl) #> # A tibble: 9 × 5 #>   sweep time_ms amplitude stimulus event_index #>   <ord>   <dbl>     <dbl> <ord>          <int> #> 1 1         405       100 1                  1 #> 2 1         408       100 1                  2 #> 3 1          NA        NA 2                 NA #> 4 1         445       100 r                  1 #> 5 2         405       100 1                  1 #> 6 2         415       100 2                  1 #> 7 2         425       100 o                  1 #> 8 2         435       100 o                  2 #> 9 2         445       100 r                  1"},{"path":"https://trfore.github.io/matools/reference/add_event_jitter.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Event Jitter From Stimulus — add_event_jitter","title":"Calculate Event Jitter From Stimulus — add_event_jitter","text":"jitter synaptic event (.e. action potential, post-synaptic event) calculated using difference stimulus time peak amplitude time (start 20/80 rise).","code":""},{"path":"https://trfore.github.io/matools/reference/add_event_jitter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Event Jitter From Stimulus — add_event_jitter","text":"","code":"add_event_jitter(df, to_rise = FALSE)"},{"path":"https://trfore.github.io/matools/reference/add_event_jitter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Event Jitter From Stimulus — add_event_jitter","text":"df Data Frame Tibble, following columns: time_ms stim_times to_rise Logical, default FALSE jitter calculated stimulus time peak amplitude, .e. time_ms. TRUE rise time, rise_ms, subtracted time peak amplitude, thus calculating jitter start 20/80 rise time.","code":""},{"path":"https://trfore.github.io/matools/reference/add_event_jitter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Event Jitter From Stimulus — add_event_jitter","text":"Data Frame Tibble numeric column, jitter, milliseconds.","code":""},{"path":"https://trfore.github.io/matools/reference/add_event_jitter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Event Jitter From Stimulus — add_event_jitter","text":"","code":"simple_df <- data.frame(   sweep = as.ordered(rep(1:2, c(4, 5))),   time_ms = c(405, 408, NA, 445, seq(405, 445, 10)),   rise_ms = rep(0.5, 9),   stimulus = ordered(c(1, 1, 2, \"r\", 1, 2, \"o\", \"o\", \"r\"), levels = c(1, 2, \"o\", \"r\")),   stim_times = c(400, 400, 410, 440, 400, 410, NA, NA, 440) )  add_event_jitter(simple_df) #>   sweep time_ms rise_ms stimulus stim_times jitter #> 1     1     405     0.5        1        400      5 #> 2     1     408     0.5        1        400      8 #> 3     1      NA     0.5        2        410     NA #> 4     1     445     0.5        r        440      5 #> 5     2     405     0.5        1        400      5 #> 6     2     415     0.5        2        410      5 #> 7     2     425     0.5        o         NA     NA #> 8     2     435     0.5        o         NA     NA #> 9     2     445     0.5        r        440      5"},{"path":"https://trfore.github.io/matools/reference/add_normalized_amplitude.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate The Normalized Amplitude — add_normalized_amplitude","title":"Calculate The Normalized Amplitude — add_normalized_amplitude","text":"calculate normalized amplitude based upon user defined baseline - set using args: normalize_condition normalize_stimulus. baseline calculated mean amplitude first \"event\" user-defined normalize_stimulus value.","code":""},{"path":"https://trfore.github.io/matools/reference/add_normalized_amplitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate The Normalized Amplitude — add_normalized_amplitude","text":"","code":"add_normalized_amplitude(   df,   normalize_condition = \"control\",   normalize_stimulus = 1 )"},{"path":"https://trfore.github.io/matools/reference/add_normalized_amplitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate The Normalized Amplitude — add_normalized_amplitude","text":"df Data Frame Tibble, following columns: sweep amplitude condition stimulus event_index normalize_condition Character, condition normalize amplitudes , defaults 'control'. normalize_stimulus Numeric, stimulus normalize , defaults '1'.","code":""},{"path":"https://trfore.github.io/matools/reference/add_normalized_amplitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate The Normalized Amplitude — add_normalized_amplitude","text":"Data Frame Tibble additional column: amplitude_normalized.","code":""},{"path":"https://trfore.github.io/matools/reference/add_normalized_amplitude.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate The Normalized Amplitude — add_normalized_amplitude","text":"","code":"simple_df <-   data.frame(     sweep = c(1:20),     amplitude = rep(c(100, 50), each = 10),     condition = rep(c(\"control\", \"drug_1\"), c(10, 10)),     stimulus = 1,     event_index = 1   )  add_normalized_amplitude(simple_df,   normalize_condition = \"control\",   normalize_stimulus = 1 ) #>    sweep amplitude condition stimulus event_index amplitude_normalized #> 1      1       100   control        1           1                  1.0 #> 2      2       100   control        1           1                  1.0 #> 3      3       100   control        1           1                  1.0 #> 4      4       100   control        1           1                  1.0 #> 5      5       100   control        1           1                  1.0 #> 6      6       100   control        1           1                  1.0 #> 7      7       100   control        1           1                  1.0 #> 8      8       100   control        1           1                  1.0 #> 9      9       100   control        1           1                  1.0 #> 10    10       100   control        1           1                  1.0 #> 11    11        50    drug_1        1           1                  0.5 #> 12    12        50    drug_1        1           1                  0.5 #> 13    13        50    drug_1        1           1                  0.5 #> 14    14        50    drug_1        1           1                  0.5 #> 15    15        50    drug_1        1           1                  0.5 #> 16    16        50    drug_1        1           1                  0.5 #> 17    17        50    drug_1        1           1                  0.5 #> 18    18        50    drug_1        1           1                  0.5 #> 19    19        50    drug_1        1           1                  0.5 #> 20    20        50    drug_1        1           1                  0.5"},{"path":"https://trfore.github.io/matools/reference/add_ppr.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Pair-Pulse Ratio — add_ppr","title":"Add Pair-Pulse Ratio — add_ppr","text":"add pair-pulse ratio value rows stimulus == 2 event_index == 1. paired stimuli event 2nd stimulus, 0 returned; stimuli event 1st stimulus, NA returned.","code":""},{"path":"https://trfore.github.io/matools/reference/add_ppr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Pair-Pulse Ratio — add_ppr","text":"","code":"add_ppr(df, column_ref = \"amplitude\")"},{"path":"https://trfore.github.io/matools/reference/add_ppr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Pair-Pulse Ratio — add_ppr","text":"df Data Frame Tibble following columns: sweep condition stimulus event_index amplitude another reference column column_ref Character, column use ppr calculation. Defaults \"amplitude\".","code":""},{"path":"https://trfore.github.io/matools/reference/add_ppr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Pair-Pulse Ratio — add_ppr","text":"Data Frame Tibble additional column: condition.","code":""},{"path":"https://trfore.github.io/matools/reference/add_ppr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Pair-Pulse Ratio — add_ppr","text":"","code":"n <- 2 simple_df <-   data.frame(     sweep = rep(1:(4 * n), each = 2),     condition = rep(c(NA, \"control\", \"drug_1\", \"drug_2\"), each = (2 * n)),     amplitude = c(rep(c(40, 20), n), rep(c(40, 20), n), rep(c(10, NA), n), rep(c(NA, 30), n)),     stimulus = rep(1:2, 4 * n),     event_index = 1   )  add_ppr(df = simple_df, column_ref = \"amplitude\") #>    sweep condition amplitude stimulus event_index ppr #> 1      1      <NA>        40        1           1  NA #> 2      1      <NA>        20        2           1 0.5 #> 3      2      <NA>        40        1           1  NA #> 4      2      <NA>        20        2           1 0.5 #> 5      3   control        40        1           1  NA #> 6      3   control        20        2           1 0.5 #> 7      4   control        40        1           1  NA #> 8      4   control        20        2           1 0.5 #> 9      5    drug_1        10        1           1  NA #> 10     5    drug_1        NA        2           1  NA #> 11     6    drug_1        10        1           1  NA #> 12     6    drug_1        NA        2           1  NA #> 13     7    drug_2        NA        1           1  NA #> 14     7    drug_2        30        2           1 0.0 #> 15     8    drug_2        NA        1           1  NA #> 16     8    drug_2        30        2           1 0.0"},{"path":"https://trfore.github.io/matools/reference/add_stimulus_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Stimulus Index To Data Frame — add_stimulus_index","title":"Add Stimulus Index To Data Frame — add_stimulus_index","text":"Categorizes events relationship given stimulus, creating stimulus index.","code":""},{"path":"https://trfore.github.io/matools/reference/add_stimulus_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Stimulus Index To Data Frame — add_stimulus_index","text":"","code":"add_stimulus_index(   df,   time_of_stim,   isi,   sweep_count,   recovery_stim = NULL,   add_missing = TRUE )"},{"path":"https://trfore.github.io/matools/reference/add_stimulus_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Stimulus Index To Data Frame — add_stimulus_index","text":"df Data Frame Tibble following columns: sweep time_ms time_of_stim List, event times milliseconds. isi Numeric, interstimulus interval milliseconds. sweep_count Numeric, total number experiment sweeps/trials. recovery_stim Numeric, default NULL. Time recovery stimulus milliseconds, useful paired-pulse ratio experiments recovery stimulus given measure rate recovery. add_missing Logical, default TRUE. Rows missing events inserted corresponding sweep stimulus number.","code":""},{"path":"https://trfore.github.io/matools/reference/add_stimulus_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Stimulus Index To Data Frame — add_stimulus_index","text":"Data Frame Tibble following columns: stimulus, Factor column stimulus index. stim_time, Numeric column stimulus times.","code":""},{"path":"https://trfore.github.io/matools/reference/add_stimulus_index.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Stimulus Index To Data Frame — add_stimulus_index","text":"Determines events fall within stimulus window, defined interstimulus interval (isi), adds rows NA missing events. stimulus column can take several values: Character int, e.g. 1, representing event occurring within stimulus window. NA, representing events correspond stimulus. Character, r, representing recovery stimulus. recovery_stim NULL.","code":""},{"path":"https://trfore.github.io/matools/reference/add_stimulus_index.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add Stimulus Index To Data Frame — add_stimulus_index","text":"Run insert_rows_for_missing_sweeps function, insert NA missing events sweep numbers already present data frame. check occurs function notifies user.","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/add_stimulus_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Stimulus Index To Data Frame — add_stimulus_index","text":"","code":"simple_df <- data.frame(   sweep = as.ordered(rep(1:2, c(1, 2))),   time_ms = c(405, 405, 415) )  # add rows for missing events add_stimulus_index(   df = simple_df,   time_of_stim = c(400, 410),   isi = 10,   sweep_count = 2,   recovery_stim = NULL,   add_missing = TRUE ) #>   sweep time_ms stimulus stim_times #> 1     1     405        1        400 #> 2     1      NA        2        410 #> 3     2     405        1        400 #> 4     2     415        2        410"},{"path":"https://trfore.github.io/matools/reference/add_sweep_number_to_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Sweep Number To Rows — add_sweep_number_to_rows","title":"Add Sweep Number To Rows — add_sweep_number_to_rows","text":"Determines sweep/trial number based upon event time, rec_time_ms.","code":""},{"path":"https://trfore.github.io/matools/reference/add_sweep_number_to_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Sweep Number To Rows — add_sweep_number_to_rows","text":"","code":"add_sweep_number_to_rows(   df,   sweep_duration,   sweep_count,   time_ref = \"rec_time_ms\" )"},{"path":"https://trfore.github.io/matools/reference/add_sweep_number_to_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Sweep Number To Rows — add_sweep_number_to_rows","text":"df Data Frame Tibble sweep_duration Numeric, sweep/trial duration seconds. sweep_count Numeric, total number experiment sweeps/trials. time_ref Character, event time reference point column name, .e. rec_time_ms.","code":""},{"path":"https://trfore.github.io/matools/reference/add_sweep_number_to_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Sweep Number To Rows — add_sweep_number_to_rows","text":"Data Frame Tibble following columns: sweep, Ordered Factor","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/add_sweep_number_to_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Sweep Number To Rows — add_sweep_number_to_rows","text":"","code":"simple_df <- data.frame(rec_time_ms = c(\"400.50\", \"4,400.50\"))  add_sweep_number_to_rows(   df = simple_df,   sweep_duration = 1,   sweep_count = 5,   time_ref = \"rec_time_ms\" ) #>   rec_time_ms sweep #> 1       400.5     1 #> 2      4400.5     5  if (FALSE) { df <- add_sweep_number_to_rows(   df = data,   sweep_duration = matools_env$sweep_duration_sec,   sweep_count = matools_env$sweeps_total,   time_ref = \"rec_time_ms\" ) }"},{"path":"https://trfore.github.io/matools/reference/align_condition_sweeps.html","id":null,"dir":"Reference","previous_headings":"","what":"Align Condition Sweeps — align_condition_sweeps","title":"Align Condition Sweeps — align_condition_sweeps","text":"Creates 'trial' column aligns first sweep condition trial '1'. original sweep value overwritten.","code":""},{"path":"https://trfore.github.io/matools/reference/align_condition_sweeps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align Condition Sweeps — align_condition_sweeps","text":"","code":"align_condition_sweeps(df, condition_names)"},{"path":"https://trfore.github.io/matools/reference/align_condition_sweeps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align Condition Sweeps — align_condition_sweeps","text":"df Data Frame Tibble, following columns: * sweep * condition condition_names Character vector condition names.","code":""},{"path":"https://trfore.github.io/matools/reference/align_condition_sweeps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Align Condition Sweeps — align_condition_sweeps","text":"Data Frame Tibble, additional column: * trial","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/analysis_evoked_ap.html","id":null,"dir":"Reference","previous_headings":"","what":"Workflow: Analyze Evoked Action Potential Data — analysis_evoked_ap","title":"Workflow: Analyze Evoked Action Potential Data — analysis_evoked_ap","text":"Working example use functions within package create analysis pipeline.","code":""},{"path":"https://trfore.github.io/matools/reference/analysis_evoked_ap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow: Analyze Evoked Action Potential Data — analysis_evoked_ap","text":"","code":"analysis_evoked_ap(   data_folder_path,   data_parameters,   histo_bin_size = 1,   histo_window_size = 50,   histo_one_event_per_bin = FALSE )"},{"path":"https://trfore.github.io/matools/reference/analysis_evoked_ap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Workflow: Analyze Evoked Action Potential Data — analysis_evoked_ap","text":"data_folder_path path data folder containing *.ASC files data_parameters path csv file project parameters histo_bin_size integer, histogram bin size. Wrapper create_histogram_df(), defaults 1 ms. histo_window_size integer, histogram window size. Wrapper create_histogram_df(), defaults 50 ms. histo_one_event_per_bin boolean, wrapper create_histogram_df() arg one_event_per_bin, defaults FALSE.","code":""},{"path":"https://trfore.github.io/matools/reference/analysis_evoked_ap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Workflow: Analyze Evoked Action Potential Data — analysis_evoked_ap","text":"tibble aggregated data","code":""},{"path":"https://trfore.github.io/matools/reference/analysis_evoked_ap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Workflow: Analyze Evoked Action Potential Data — analysis_evoked_ap","text":"particular workflow used analyze spike jitter, probability, rate action potentials generated externally stimulating synaptic inputs onto recorded neuron.","code":""},{"path":"https://trfore.github.io/matools/reference/analysis_evoked_ap.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Workflow: Analyze Evoked Action Potential Data — analysis_evoked_ap","text":"workflow hard-coded values, yet intended serve reference point.","code":""},{"path":"https://trfore.github.io/matools/reference/analysis_evoked_ap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Workflow: Analyze Evoked Action Potential Data — analysis_evoked_ap","text":"","code":"if (FALSE) { data_path <- paste(getwd(), \"data-raw/evoked_ap\", sep = \"/\") data_folder <- paste(data_path, \"data\", sep = \"/\") data_parameters <- paste(data_path, \"evoked_ap_parameters.csv\", sep = \"/\")  data_collection <- analysis_evoked_ap(   data_folder_path = data_folder,   data_parameters = data_parameters ) }"},{"path":"https://trfore.github.io/matools/reference/analysis_evoked_psp.html","id":null,"dir":"Reference","previous_headings":"","what":"Workflow: Analyze Evoked Post-Synaptic Potential Data — analysis_evoked_psp","title":"Workflow: Analyze Evoked Post-Synaptic Potential Data — analysis_evoked_psp","text":"Working example use functions within package create analysis pipeline.","code":""},{"path":"https://trfore.github.io/matools/reference/analysis_evoked_psp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow: Analyze Evoked Post-Synaptic Potential Data — analysis_evoked_psp","text":"","code":"analysis_evoked_psp(data_folder_path, data_parameters)"},{"path":"https://trfore.github.io/matools/reference/analysis_evoked_psp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Workflow: Analyze Evoked Post-Synaptic Potential Data — analysis_evoked_psp","text":"data_folder_path path data folder containing *.ASC files data_parameters path csv file project parameters","code":""},{"path":"https://trfore.github.io/matools/reference/analysis_evoked_psp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Workflow: Analyze Evoked Post-Synaptic Potential Data — analysis_evoked_psp","text":"tibble aggregated data","code":""},{"path":"https://trfore.github.io/matools/reference/analysis_evoked_psp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Workflow: Analyze Evoked Post-Synaptic Potential Data — analysis_evoked_psp","text":"particular workflow used analyze amplitude, failure rate, potency, paired-pulse ratio post-synaptic potentials recorded using intracellular electrophysiology technique.","code":""},{"path":"https://trfore.github.io/matools/reference/analysis_evoked_psp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Workflow: Analyze Evoked Post-Synaptic Potential Data — analysis_evoked_psp","text":"workflow hard-coded values, yet intended serve reference point.","code":""},{"path":"https://trfore.github.io/matools/reference/analysis_evoked_psp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Workflow: Analyze Evoked Post-Synaptic Potential Data — analysis_evoked_psp","text":"","code":"if (FALSE) { data_path <- paste(getwd(), \"data-raw/evoked_psp\", sep = \"/\") data_folder <- paste(data_path, \"data\", sep = \"/\") data_parameters <- paste(data_path, \"evoked_psp_parameters.csv\", sep = \"/\")  data_collection <- analysis_evoked_psp(   data_folder_path = data_folder,   data_parameters = data_parameters ) }"},{"path":"https://trfore.github.io/matools/reference/asc_lookup_table.html","id":null,"dir":"Reference","previous_headings":"","what":"ASC File LUT — asc_lookup_table","title":"ASC File LUT — asc_lookup_table","text":"lookup table column names classes ASC files generated mini analysis","code":""},{"path":"https://trfore.github.io/matools/reference/asc_lookup_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ASC File LUT — asc_lookup_table","text":"","code":"asc_lookup_table()"},{"path":"https://trfore.github.io/matools/reference/asc_lookup_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ASC File LUT — asc_lookup_table","text":"tibble three columns: * name * df_class - classes data frames * tbl_class - classes tibbles","code":""},{"path":"https://trfore.github.io/matools/reference/asc_lookup_table.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"ASC File LUT — asc_lookup_table","text":"Several data frame columns set base type \"character\" avoid generating NA number values containing commas periods, e.g. 1,200.00, import.","code":""},{"path":"https://trfore.github.io/matools/reference/asc_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert .ASC File Into Data Frame — asc_to_df","title":"Convert .ASC File Into Data Frame — asc_to_df","text":"Exported files Synaptosoft's Mini Analysis software (MA, see ref) saved ASCII text file (.asc), function convert (.asc) files data.frame.","code":""},{"path":"https://trfore.github.io/matools/reference/asc_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert .ASC File Into Data Frame — asc_to_df","text":"","code":"asc_to_df(file_path, merge_iei = FALSE)"},{"path":"https://trfore.github.io/matools/reference/asc_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert .ASC File Into Data Frame — asc_to_df","text":"file_path Character, path file. User can call file.choose interactively select file. merge_iei Logical, TRUE .asc .txt files matching names merged. Default FALSE.","code":""},{"path":"https://trfore.github.io/matools/reference/asc_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert .ASC File Into Data Frame — asc_to_df","text":"data.frame, column names match default columns within Synaptosoft's Mini Analysis software. Column names follows: ma_row: Integer, corresponds row number generated Mini Analysis. recommended use reference/key value. rec_time_ms: Character, continuous time value determined recording digitization value. amplitude Double, amplitude detected event. rise_ms Double, rise time milliseconds. decay_ms Double, decay time milliseconds. area Character baseline Double noise Double group: Integer (0 255), user-assigned group number within MA. channel: Integer, corresponds recording channel defined user's DAC digitizer. x10_90_rise Double halfwidth Double rise50 Double peak_direction Integer burst Integer burste Integer x10_90slope Character rel_time Double iei: Double, inter-event interval milliseconds calculated MA. Optional column, arg merge_iei set TRUE.","code":""},{"path":"https://trfore.github.io/matools/reference/asc_to_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert .ASC File Into Data Frame — asc_to_df","text":"Mini Analysis software (MA) independently analyzes inter-event interval events file, function combine event file (.asc) corresponding inter-event interval (IEI) text file (.txt) arg merge_iei set TRUE.","code":""},{"path":"https://trfore.github.io/matools/reference/asc_to_df.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert .ASC File Into Data Frame — asc_to_df","text":"Several columns set base type \"character\" avoid generating NA number values containing commas periods, e.g. 1,200.00, import.","code":""},{"path":"https://trfore.github.io/matools/reference/asc_to_df.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert .ASC File Into Data Frame — asc_to_df","text":"http://www.synaptosoft.com/MiniAnalysis/","code":""},{"path":"https://trfore.github.io/matools/reference/asc_to_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert .ASC File Into A Tibble Data Frame — asc_to_tibble","title":"Convert .ASC File Into A Tibble Data Frame — asc_to_tibble","text":"Exported files Synaptosoft's Mini Analysis software (MA, see ref) saved ASCII text file (.asc), function convert (.asc) files tibble.","code":""},{"path":"https://trfore.github.io/matools/reference/asc_to_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert .ASC File Into A Tibble Data Frame — asc_to_tibble","text":"","code":"asc_to_tibble(file_path, merge_iei = FALSE)"},{"path":"https://trfore.github.io/matools/reference/asc_to_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert .ASC File Into A Tibble Data Frame — asc_to_tibble","text":"file_path Character, path file. User can call file.choose interactively select file. merge_iei Logical, TRUE .asc .txt files matching names merged. Default FALSE.","code":""},{"path":"https://trfore.github.io/matools/reference/asc_to_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert .ASC File Into A Tibble Data Frame — asc_to_tibble","text":"tibble column names match default columns within Synaptosoft's Mini Analysis software. Column names follows: ma_row: Integer, corresponds row number generated Mini Analysis. recommended use reference/key value. rec_time_ms: Double, continuous time value determined recording digitization value. amplitude Double, amplitude detected event. rise_ms Double, rise time milliseconds. decay_ms Double, decay time milliseconds. area Double baseline Double noise Double group: Integer (0 255), user-assigned group number within MA. channel: Integer, corresponds recording channel defined user's DAC digitizer. x10_90_rise Double halfwidth Double rise50 Double peak_direction Integer burst Integer burste Integer x10_90slope Numeric rel_time Double iei: Double, inter-event interval milliseconds calculated MA. Optional column, arg merge_iei set TRUE.","code":""},{"path":"https://trfore.github.io/matools/reference/asc_to_tibble.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert .ASC File Into A Tibble Data Frame — asc_to_tibble","text":"Mini Analysis software (MA) independently analyzes inter-event interval events file, function combine event file (.asc) corresponding inter-event interval (IEI) text file (.txt) arg merge_iei set TRUE.","code":""},{"path":"https://trfore.github.io/matools/reference/asc_to_tibble.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert .ASC File Into A Tibble Data Frame — asc_to_tibble","text":"http://www.synaptosoft.com/MiniAnalysis/","code":""},{"path":"https://trfore.github.io/matools/reference/batch_convert_asc_to_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert .ASC Files To .cvs Files — batch_convert_asc_to_csv","title":"Convert .ASC Files To .cvs Files — batch_convert_asc_to_csv","text":"Exported files Synaptosoft's Mini Analysis software (MA, see ref) saved ASCII text file (.asc), function provides user-friendly .csv file data analysis viewing. CSV files automatically generated 'WORKING_DIR/data_csv/' folder.","code":""},{"path":"https://trfore.github.io/matools/reference/batch_convert_asc_to_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert .ASC Files To .cvs Files — batch_convert_asc_to_csv","text":"","code":"batch_convert_asc_to_csv(file_list, merge_iei = FALSE, path = NULL)"},{"path":"https://trfore.github.io/matools/reference/batch_convert_asc_to_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert .ASC Files To .cvs Files — batch_convert_asc_to_csv","text":"file_list Character, vector files process, e.g. matools_env$files_in_folder. merge_iei Logical, TRUE asc txt files matching names merged. Default FALSE. path Character, location data directory containing .asc files. Default NULL matools_env$directory_data used.","code":""},{"path":"https://trfore.github.io/matools/reference/batch_convert_asc_to_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert .ASC Files To .cvs Files — batch_convert_asc_to_csv","text":"Exports *.csv file directory specified path, column names match default columns within Synaptosoft's Mini Analysis software.","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/calculate_stimulus_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Stimulus Times — calculate_stimulus_times","title":"Calculate Stimulus Times — calculate_stimulus_times","text":"output can used determine # stimuli timing subsequent functions.","code":""},{"path":"https://trfore.github.io/matools/reference/calculate_stimulus_times.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Stimulus Times — calculate_stimulus_times","text":"","code":"calculate_stimulus_times(stimulus_time_first, stimulus_count, stimulus_isi)"},{"path":"https://trfore.github.io/matools/reference/calculate_stimulus_times.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Stimulus Times — calculate_stimulus_times","text":"stimulus_time_first Numeric, time first stimulus ms stimulus_count Numeric, number stimuli stimulus_isi Numeric, interstimulus interval ms, e.g. 25 Hz = 40 ms","code":""},{"path":"https://trfore.github.io/matools/reference/calculate_stimulus_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Stimulus Times — calculate_stimulus_times","text":"returns vector stimulus times matools_env: time_of_stimuli vector stimulus times","code":""},{"path":"https://trfore.github.io/matools/reference/calculate_stimulus_times.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Stimulus Times — calculate_stimulus_times","text":"","code":"if (FALSE) { library(matools)  calculate_stimulus_times(   matools_env$stimulus_time_of_first,   matools_env$stimulus_count,   matools_env$stimulus_isi ) }"},{"path":"https://trfore.github.io/matools/reference/condition_sweep_lut.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Condition Sweep Lookup Table (LUT) — condition_sweep_lut","title":"Generate Condition Sweep Lookup Table (LUT) — condition_sweep_lut","text":"Generate Condition Sweep Lookup Table (LUT)","code":""},{"path":"https://trfore.github.io/matools/reference/condition_sweep_lut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Condition Sweep Lookup Table (LUT) — condition_sweep_lut","text":"","code":"condition_sweep_lut(df, condition_names, column_ref = \"sweep\")"},{"path":"https://trfore.github.io/matools/reference/condition_sweep_lut.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Condition Sweep Lookup Table (LUT) — condition_sweep_lut","text":"df Data Frame Tibble, following columns: * sweep another reference column, e.g. trial * condition condition_names Character vector condition names. column_ref Character, reference column generate LUT. Defaults \"sweep\".","code":""},{"path":"https://trfore.github.io/matools/reference/condition_sweep_lut.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Condition Sweep Lookup Table (LUT) — condition_sweep_lut","text":"Tibble, following columns: * condition Character. * condition_start Integer, first sweep condition. * condition_end Integer, last sweep condition. * delta Integer, number sweeps condition.","code":""},{"path":"https://trfore.github.io/matools/reference/condition_sweep_lut.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Condition Sweep Lookup Table (LUT) — condition_sweep_lut","text":"function determine first last sweep numbers conditions, returning LUT columns, condition_start condition_end. also calculates number sweeps condition column, delta.","code":""},{"path":"https://trfore.github.io/matools/reference/create_histogram_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Data Frame With Histogram Values — create_histogram_df","title":"Create Data Frame With Histogram Values — create_histogram_df","text":"Generates data.frame binned values, binning starts first stimulus, e.g. 0 ms, ends window_size.","code":""},{"path":"https://trfore.github.io/matools/reference/create_histogram_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Data Frame With Histogram Values — create_histogram_df","text":"","code":"create_histogram_df(   df,   time_of_stim,   condition_names,   bin_size = 1,   window_size,   first_bin_on_stim = FALSE,   one_event_per_bin = FALSE )"},{"path":"https://trfore.github.io/matools/reference/create_histogram_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Data Frame With Histogram Values — create_histogram_df","text":"df Data Frame Tibble following columns: time_ms sweep condition stimulus event_index time_of_stim List, event times milliseconds. condition_names Character, vector condition titles. bin_size Integer, histogram bin width size milliseconds. Default '1'. window_size Integer, milliseconds size window use histogram, start window first stimulus. first_bin_on_stim Logical, TRUE first bin center occur first stimulus, .e. 0. Default FALSE. one_event_per_bin Logical, TRUE single event counted bin. Default FALSE.","code":""},{"path":"https://trfore.github.io/matools/reference/create_histogram_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Data Frame With Histogram Values — create_histogram_df","text":"Tibble following columns: condition - character count_events - integer count_sweeps - integer h_counts - nested list integers h_density - nested list doubles h_bin_centers - nested list doubles probability - nested list doubles h_count_norm_max - nested list doubles h_prob_norm_max - nested list doubles","code":""},{"path":"https://trfore.github.io/matools/reference/create_histogram_df.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create Data Frame With Histogram Values — create_histogram_df","text":"returns tibble. Histogram related columns nested, facilitates aggregating output tibble future comparison across experiments. See code example using dplyr::select tidyr::unnest working functions output.","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/create_histogram_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Data Frame With Histogram Values — create_histogram_df","text":"","code":"library(magrittr, include.only = \"%>%\")  simple_df <- data.frame(   time_ms = rep(c(417, 427), 10),   sweep = rep(c(1:10), each = 2),   condition = rep(\"control\", 10),   stimulus = rep(c(1, 2), 10),   event_index = 1 )  df_output <-   create_histogram_df(     df = simple_df,     time_of_stim = c(415.5, 425.5),     condition_names = c(\"control\", \"drug1\"),     bin_size = 1,     window_size = 20,     first_bin_on_stim = FALSE,     one_event_per_bin = FALSE   )  df_output %>%   dplyr::select(     condition, h_counts, h_density, h_bin_centers, probability, h_count_norm_max, h_prob_norm_max   ) %>%   tidyr::unnest(c(     h_counts, h_density, h_bin_centers, probability, h_count_norm_max, h_prob_norm_max   )) #> # A tibble: 20 × 7 #> # Groups:   condition [1] #>    condition h_counts h_density h_bin_centers probability h_count_norm_max #>    <chr>        <int>     <dbl>         <dbl>       <dbl>            <dbl> #>  1 control          0       0             0.5           0                0 #>  2 control         10       0.5           1.5           1                1 #>  3 control          0       0             2.5           0                0 #>  4 control          0       0             3.5           0                0 #>  5 control          0       0             4.5           0                0 #>  6 control          0       0             5.5           0                0 #>  7 control          0       0             6.5           0                0 #>  8 control          0       0             7.5           0                0 #>  9 control          0       0             8.5           0                0 #> 10 control          0       0             9.5           0                0 #> 11 control          0       0            10.5           0                0 #> 12 control         10       0.5          11.5           1                1 #> 13 control          0       0            12.5           0                0 #> 14 control          0       0            13.5           0                0 #> 15 control          0       0            14.5           0                0 #> 16 control          0       0            15.5           0                0 #> 17 control          0       0            16.5           0                0 #> 18 control          0       0            17.5           0                0 #> 19 control          0       0            18.5           0                0 #> 20 control          0       0            19.5           0                0 #> # ℹ 1 more variable: h_prob_norm_max <dbl>"},{"path":"https://trfore.github.io/matools/reference/create_parameter_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Create A CSV Template For Project Parameters — create_parameter_template","title":"Create A CSV Template For Project Parameters — create_parameter_template","text":"Create CSV Template Project Parameters","code":""},{"path":"https://trfore.github.io/matools/reference/create_parameter_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create A CSV Template For Project Parameters — create_parameter_template","text":"","code":"create_parameter_template()"},{"path":"https://trfore.github.io/matools/reference/create_parameter_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create A CSV Template For Project Parameters — create_parameter_template","text":"'parameter_template.csv' file working directory","code":""},{"path":"https://trfore.github.io/matools/reference/create_project_folders.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates plot folders within the parent directory — create_project_folders","title":"Creates plot folders within the parent directory — create_project_folders","text":"Automatic plotting functions save outputs, e.g. *.pdf, folders.","code":""},{"path":"https://trfore.github.io/matools/reference/create_project_folders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates plot folders within the parent directory — create_project_folders","text":"","code":"create_project_folders(experiments)"},{"path":"https://trfore.github.io/matools/reference/create_project_folders.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates plot folders within the parent directory — create_project_folders","text":"experiments Character vector types experiments, .e. experiment_types.","code":""},{"path":"https://trfore.github.io/matools/reference/create_project_folders.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates plot folders within the parent directory — create_project_folders","text":"System folders following names: boxplots scatterplots histograms rasterplots heatplots","code":""},{"path":"https://trfore.github.io/matools/reference/create_project_folders.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Creates plot folders within the parent directory — create_project_folders","text":"Deprecated, use tibble structure.","code":""},{"path":"https://trfore.github.io/matools/reference/create_summary_array.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates empty experiment summary arrays — create_summary_array","title":"Creates empty experiment summary arrays — create_summary_array","text":"Used store outputs individual data files (.asc) processed, allowing grouped analysis /plotting functions later time. Used conjunction fill_summary_array.","code":""},{"path":"https://trfore.github.io/matools/reference/create_summary_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates empty experiment summary arrays — create_summary_array","text":"","code":"create_summary_array(parameters, y, z)"},{"path":"https://trfore.github.io/matools/reference/create_summary_array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates empty experiment summary arrays — create_summary_array","text":"parameters output set_experiment_parameters Experiment parameters data frame. y Character, user defined name(s) output (.e. \"analysis_summary\") z Character, vector types experiments (.e. matools_env$experiment_types).","code":""},{"path":"https://trfore.github.io/matools/reference/create_summary_array.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates empty experiment summary arrays — create_summary_array","text":"Nested empty lists segregated experiment type corresponding filenames. Created global environment.","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/create_summary_array.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates empty experiment summary arrays — create_summary_array","text":"","code":"if (FALSE) { library(matools)  summary_array_names <- c(\"analysis_summary\", \"spike_counts_all_cells\")  for (name in summary_array_names) {   create_summary_array(     matools_env$parameters,     name,     matools_env$experiment_types   ) }   rm(list = summary_array_names) }"},{"path":"https://trfore.github.io/matools/reference/fill_summary_array.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill summary array — fill_summary_array","title":"Fill summary array — fill_summary_array","text":"Used store modified dataframes /analysis summaries nested list structure - allows user generate plots based individual groups experiments. function soft depreciated","code":""},{"path":"https://trfore.github.io/matools/reference/fill_summary_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill summary array — fill_summary_array","text":"","code":"fill_summary_array(id, filename, event_summary, array_blank, array_name)"},{"path":"https://trfore.github.io/matools/reference/fill_summary_array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill summary array — fill_summary_array","text":"id Character, Experiment id filename Character, single filename event_summary Data Frame array_blank Object, summary array filled. Generated using create_summary_array. array_name String, name output, e.g \"analysis_summary\"","code":""},{"path":"https://trfore.github.io/matools/reference/fill_summary_array.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill summary array — fill_summary_array","text":"Appended nested lists segregated experiment type corresponding filenames. Revised global environment.","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/fill_summary_array.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fill summary array — fill_summary_array","text":"","code":"if (FALSE) { library(matools)  summary_array_names <- c(\"analysis_summary\", \"spike_counts_all_cells\")  for (name in summary_array_names) {   create_summary_array(     matools_env$parameters,     name,     matools_env$experiment_types   ) }  fill_summary_array(   matools_env$experiment_id,   \"file_name\",   df,   analysis_summary,   \"analysis_summary\" )   rm(list = summary_array_names) }"},{"path":"https://trfore.github.io/matools/reference/ggplot_color_hue.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Color Hue List — ggplot_color_hue","title":"Generate Color Hue List — ggplot_color_hue","text":"Manually generating color values allows consistent assignment individual experiment conditions across df/experiments - independent events occurring within given condition. ggplot's auto color can assign different colors across df/experiments individual df missing events.","code":""},{"path":"https://trfore.github.io/matools/reference/ggplot_color_hue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Color Hue List — ggplot_color_hue","text":"","code":"ggplot_color_hue(color_count)"},{"path":"https://trfore.github.io/matools/reference/ggplot_color_hue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Color Hue List — ggplot_color_hue","text":"color_count Numeric, number colors generate","code":""},{"path":"https://trfore.github.io/matools/reference/ggplot_color_hue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Color Hue List — ggplot_color_hue","text":"Character vector six digit hex color value","code":""},{"path":"https://trfore.github.io/matools/reference/import_check_missing_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Check For Matching Data Files To Experimental Parameters — import_check_missing_info","title":"Import Check For Matching Data Files To Experimental Parameters — import_check_missing_info","text":"Indicates disparity files present /parameters. Returns warning message missing file information allows user exclude processing data missing either data file experimental parameters. important, helper functions, import_experiment_parameters, can generate environment variables parameters, analysis function arguments can easily point values.","code":""},{"path":"https://trfore.github.io/matools/reference/import_check_missing_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Check For Matching Data Files To Experimental Parameters — import_check_missing_info","text":"","code":"import_check_missing_info(dir_filenames, parameters, skip_prompt = FALSE)"},{"path":"https://trfore.github.io/matools/reference/import_check_missing_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Check For Matching Data Files To Experimental Parameters — import_check_missing_info","text":"dir_filenames Character vector files within working directory parameters Data frame experimental parameters skip_prompt Logical, skips warning messages user prompts, automatically remove files missing parameters files_to_process list. Defaults FALSE.","code":""},{"path":"https://trfore.github.io/matools/reference/import_check_missing_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Check For Matching Data Files To Experimental Parameters — import_check_missing_info","text":"Character vector files_to_process matools_env.","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/import_check_missing_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Check For Matching Data Files To Experimental Parameters — import_check_missing_info","text":"","code":"if (FALSE) { library(matools)  set_pkg_environment() set_data_directory() import_experiment_parameters() import_check_missing_info(   matools_env$files_in_folder,   matools_env$parameters )  print(matools_env$files_to_process) }"},{"path":"https://trfore.github.io/matools/reference/import_experiment_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Importing Experiment Parameters — import_experiment_parameters","title":"Importing Experiment Parameters — import_experiment_parameters","text":"Importing experiment parameters static file allows batch processing experiments may asymmetries, e.g. drug, stimulus, experiment id. User manually fill \"experiment_parameters.csv\" file. function, create_parameter_template, can called generate template file.","code":""},{"path":"https://trfore.github.io/matools/reference/import_experiment_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Importing Experiment Parameters — import_experiment_parameters","text":"","code":"import_experiment_parameters(file = NULL)"},{"path":"https://trfore.github.io/matools/reference/import_experiment_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Importing Experiment Parameters — import_experiment_parameters","text":"file Data.Frame Character (PATH .csv file). Users can pass data frame tibble function full PATH .csv file. allows use remote/cloud-based file, e.g. googlesheets, local file. Default NULL prompt user interactively select file.","code":""},{"path":"https://trfore.github.io/matools/reference/import_experiment_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Importing Experiment Parameters — import_experiment_parameters","text":"Environment objects (variables) matools_env: parameters experiment_types","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/import_experiment_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Importing Experiment Parameters — import_experiment_parameters","text":"","code":"if (FALSE) { library(matools)  ### Passing the PATH to a local file ### local_file_path <- \"/path/to/my/parameters.csv\" import_experiment_parameters(file = local_file_path)  ### Using a publicly shared Google Sheet ### googlesheets4::gs4_deauth() public_sheet <- \"https://docs.google.com/spreadsheets/d/YOUR_SHEET_HASH_HERE/edit?usp=sharing\"  # Convert the sheet to a data frame parameters <-   googlesheets4::read_sheet(public_sheet) import_experiment_parameters(file = parameters) }"},{"path":"https://trfore.github.io/matools/reference/insert_rows_for_missing_sweeps.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Blank Rows To Data Frame For Missing Sweeps/Trials — insert_rows_for_missing_sweeps","title":"Add Blank Rows To Data Frame For Missing Sweeps/Trials — insert_rows_for_missing_sweeps","text":"Events may occur every sweep/trial, add blank row sweeps without events. Thus, creating continuous sweep data allowing addition condition tags /analysis sweep number.","code":""},{"path":"https://trfore.github.io/matools/reference/insert_rows_for_missing_sweeps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Blank Rows To Data Frame For Missing Sweeps/Trials — insert_rows_for_missing_sweeps","text":"","code":"insert_rows_for_missing_sweeps(df, sweep_count)"},{"path":"https://trfore.github.io/matools/reference/insert_rows_for_missing_sweeps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Blank Rows To Data Frame For Missing Sweeps/Trials — insert_rows_for_missing_sweeps","text":"df Data Frame Tibble, following columns: sweep sweep_count Numeric, total number sweeps.","code":""},{"path":"https://trfore.github.io/matools/reference/insert_rows_for_missing_sweeps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Blank Rows To Data Frame For Missing Sweeps/Trials — insert_rows_for_missing_sweeps","text":"Appended data.frame rows sweeps/trials without events, ordered factor column, sweep, contain integer values, row values NA.","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/insert_rows_for_missing_sweeps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Blank Rows To Data Frame For Missing Sweeps/Trials — insert_rows_for_missing_sweeps","text":"","code":"simple_df <- data.frame(   rec_time_ms = c(400, 4400),   sweep = ordered(c(1, 5), levels = c(1:5)) )  insert_rows_for_missing_sweeps(   df = simple_df,   sweep_count = 5 ) #>   rec_time_ms sweep #> 1         400     1 #> 2          NA     2 #> 3          NA     3 #> 4          NA     4 #> 5        4400     5"},{"path":"https://trfore.github.io/matools/reference/plot_event_avg.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Event Value (Average) — plot_event_avg","title":"Plot Event Value (Average) — plot_event_avg","text":"highly abstracted plot can used plot average value within across experiments. useful examining features synaptic events, e.g. amplitude, failure rate, potency, paired-pulse ratio. plot requires pre-processing feature(s) interest column unique values group , .e. experiment recording IDs.","code":""},{"path":"https://trfore.github.io/matools/reference/plot_event_avg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Event Value (Average) — plot_event_avg","text":"","code":"plot_event_avg(   df,   x_axis,   y_axis,   plot_grouping,   plot_mean = FALSE,   weighted_mean = FALSE,   sd_value = NULL,   experiment_name = NULL,   x_label = NULL,   y_label = NULL,   ymax = NA,   ... )"},{"path":"https://trfore.github.io/matools/reference/plot_event_avg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Event Value (Average) — plot_event_avg","text":"df Data frame Tibble, grouped experiment data set. x_axis Character - unquoted, non-standard evaluation. Column name use x-axis. y_axis Character - unquoted, non-standard evaluation. Column name use y-axis. plot_grouping Character, column name use grouping. plot_mean Boolean, add group mean plot. Default FALSE. weighted_mean Boolean, plot weighted mean, requires df column labelled 'w' weights \\(w\\). Default FALSE. sd_value Optional character, std deviation measurement use, accepts \"sd\" \"sem\". Default NULL. experiment_name Optional character, add subtitle experiment name. Default NULL. x_label Optional character, custom label x-axis. Default NULL, use x_axis column name. y_label Optional character, custom label y-axis. Default NULL, use y_axis column name. ymax Optional integer, set y-axis limit. Default NULL y-axis automatically determined ggplot. ... Optional vargs additional ggplot function calls, e.g. ylim(), ylab().","code":""},{"path":"https://trfore.github.io/matools/reference/plot_event_avg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Event Value (Average) — plot_event_avg","text":"ggplot2 object user defined features.","code":""},{"path":"https://trfore.github.io/matools/reference/plot_event_avg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Event Value (Average) — plot_event_avg","text":"weight column, w, assumed frequency weights - weight equals number occurrences. Weighted mean sd calculated using following formulas: weighted mean: \\(\\bar{x}=\\frac{\\sum\\limits_{=1}^n w_i x_i}{\\sum\\limits_{=1}^n w_i}\\) weighted sd: \\(\\sqrt{\\hat{\\sigma}^2_\\mathrm{w}}\\) unbiased variance: \\(\\hat{\\sigma}^2_\\mathrm{w}=\\frac{\\sum\\limits_{=1}^N w_i \\left(x_i - \\mu^{*}\\right)^2 }{\\sum_{=1}^N w_i - 1}\\)","code":""},{"path":"https://trfore.github.io/matools/reference/plot_event_avg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot Event Value (Average) — plot_event_avg","text":"Wikipedia: Weighted arithmetic mean GitHub: harrelfe/Hmisc - issues #22","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/plot_event_avg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Event Value (Average) — plot_event_avg","text":"","code":"simple_tbl <-   data.frame(     recording_id = rep(1:2, each = 3),     experiment_id = rep(\"example\", 6),     condition = rep(c(\"control\", \"drug_1\", \"drug_2\"), 2),     amplitude = c(1, 0.5, 1, 2, 1, 2)   )  plot_event_avg(   df = simple_tbl,   x_axis = condition,   y_axis = amplitude,   plot_grouping = \"recording_id\",   plot_mean = TRUE,   sd_value = \"sem\",   experiment_name = \"example\",   ymax = 3 ) + ggplot2::coord_fixed(ratio = 3)   # remove average and add custom labels plot_event_avg(   df = simple_tbl,   x_axis = condition,   y_axis = amplitude,   plot_grouping = \"recording_id\",   plot_mean = FALSE,   experiment_name = \"example\",   x_label = \"custom x-label\",   y_label = \"custom y-label\",   ymax = 3 )   # plot a weighted average weighted_tbl <-   data.frame(     recording_id = rep(1:2, each = 3),     experiment_id = rep(\"example\", 6),     condition = rep(c(\"control\", \"drug_1\", \"drug_2\"), 2),     amplitude = c(1, 0.5, 1, 2, 1, 2),     w = rep(c(1, 100), each = 3)   )  plot_event_avg(   df = weighted_tbl,   x_axis = condition,   y_axis = amplitude,   plot_grouping = \"recording_id\",   plot_mean = TRUE,   weighted_mean = TRUE,   sd_value = \"sd\",   experiment_name = \"plot weighted mean\",   x_label = \"condition\",   y_label = \"amplitude\",   ymax = 3, )"},{"path":"https://trfore.github.io/matools/reference/plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Heat Map of Event Amplitudes — plot_heatmap","title":"Plot Heat Map of Event Amplitudes — plot_heatmap","text":"Plot Heat Map Event Amplitudes","code":""},{"path":"https://trfore.github.io/matools/reference/plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Heat Map of Event Amplitudes — plot_heatmap","text":"","code":"plot_heatmap(df, filename, condition_names, max_amplitude = NULL)"},{"path":"https://trfore.github.io/matools/reference/plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Heat Map of Event Amplitudes — plot_heatmap","text":"df Data Frame Tibble following columns: sweep amplitude condition stimulus event index filename Character, name file. condition_names Character vector condition names. max_amplitude Integer, maximum value use heat map. set less maximum amplitude data frame, value changed warning returned. Defaults NULL automatically set value df's max value.","code":""},{"path":"https://trfore.github.io/matools/reference/plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Heat Map of Event Amplitudes — plot_heatmap","text":"ggplot object","code":""},{"path":"https://trfore.github.io/matools/reference/plot_heatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Heat Map of Event Amplitudes — plot_heatmap","text":"blank white space used missing events (amplitude == NA).","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/plot_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Heat Map of Event Amplitudes — plot_heatmap","text":"","code":"simple_df <-   data.frame(     sweep = rep(1:20, each = 2),     amplitude = c(rnorm(20, 100, 20), rnorm(20, 50, 10)),     condition = rep(c(\"control\", \"drug1\"), rep(20, 2)),     stimulus = rep(c(1:2), 20),     event_index = rep(1, 40)   )  plot_heatmap(   df = simple_df,   filename = \"example\",   condition_names = c(\"control\", \"drug1\") ) #> Warning: plot_heatmap() 'max_amplitude' is NOT defined; 'max_amplitude' set to: 131.878309467725"},{"path":"https://trfore.github.io/matools/reference/plot_jitter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Spike Jitter — plot_jitter","title":"Plot Spike Jitter — plot_jitter","text":"Plot Spike Jitter","code":""},{"path":"https://trfore.github.io/matools/reference/plot_jitter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Spike Jitter — plot_jitter","text":"","code":"plot_jitter(df, group_value = \"condition\", ymax = 8, sd_value = NULL, ...)"},{"path":"https://trfore.github.io/matools/reference/plot_jitter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Spike Jitter — plot_jitter","text":"df Data frame Tibble, single experiment data set following columns: condition stimulus jitter event_index group_value Character, column name use grouping. Default \"condition\". ymax Optional integer, maximum y-value plot milliseconds (ms). Default 8. sd_value Optional character, std deviation measurement use, accepts \"sd\" \"sem\". Default NULL. ... Optional vargs, apply additional ggplot function calls, e.g. ylim(), ylab().","code":""},{"path":"https://trfore.github.io/matools/reference/plot_jitter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Spike Jitter — plot_jitter","text":"ggplot2 object following features: X-axis binned events stimulus value. Y-axis action potential latency (jitter) milliseconds.","code":""},{"path":"https://trfore.github.io/matools/reference/plot_jitter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Spike Jitter — plot_jitter","text":"","code":"n <- 100 # sweeps n_stim <- 2 # stimuli per sweep conditions <- c(\"control\", \"drug_1\") n_conditions <- length(conditions)  simple_tbl <-   data.frame(     experiment_id = rep(\"example\", ((n * n_stim * n_conditions))),     condition = rep(conditions, rep((n * n_stim), n_conditions)),     stimulus = rep(c(1:n_stim), n * n_conditions),     jitter = rep(rnorm((n * n_stim), 2, 1), n_conditions),     event_index = rep(1, ((n * n_stim * n_conditions)))   )  plot_jitter(   simple_tbl,   ymax = 4,   sd_value = \"sd\" )   # change the default color scheme ---- plot_jitter(   simple_tbl,   group_value = \"condition\",   ymax = 4,   sd_value = \"sem\",   ggplot2::scale_color_manual(values = c(\"black\", \"blue\")) )"},{"path":"https://trfore.github.io/matools/reference/plot_max_probability.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Max Probability Across Experiments — plot_max_probability","title":"Plot Max Probability Across Experiments — plot_max_probability","text":"plot maximum value specified metric across two conditions.","code":""},{"path":"https://trfore.github.io/matools/reference/plot_max_probability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Max Probability Across Experiments — plot_max_probability","text":"","code":"plot_max_probability(   df,   x_axis_condition,   y_axis_condition,   metric = \"probability\",   xmax = 1,   ymax = 1,   x_label = NULL,   y_label = NULL )"},{"path":"https://trfore.github.io/matools/reference/plot_max_probability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Max Probability Across Experiments — plot_max_probability","text":"df Data Frame Tibble following columns: cell_id experiment_id condition P() metric create_histogram_df(), e.g. density, probability. x_axis_condition Character, condition value use x-axis, e.g. \"control\". y_axis_condition Character, condition value use y-axis, e.g. \"drug\". metric Character, P() metric plot, e.g. density, probability. Defaults \"probability\". xmax Optional integer, maximum x-value plot, values rounded nearest 1. Default 1, ymin fixed 0. ymax Optional integer, maximum y-value plot, values rounded nearest 1. Default 1, ymin fixed 0. x_label Optional character, custom label x-axis. Default NULL, use column name x_axis_condition. y_label Optional character, custom label y-axis. Default NULL, use column name y_axis_condition.","code":""},{"path":"https://trfore.github.io/matools/reference/plot_max_probability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Max Probability Across Experiments — plot_max_probability","text":"ggplot2 object","code":""},{"path":"https://trfore.github.io/matools/reference/plot_max_probability.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot Max Probability Across Experiments — plot_max_probability","text":"function intended use aggregated data long format extracted create_histogram_df.","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/plot_max_probability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Max Probability Across Experiments — plot_max_probability","text":"","code":"library(magrittr, include.only = \"%>%\")  bins <- seq(0.5, 39.5, by = 1) n_bins <- length(bins) conditions <- c(\"control\", \"drug\") n_conditions <- length(conditions)  # example output from create_histogram_df() simple_tbl <-   tibble::tibble(     cell_id = \"cell\",     experiment_id = \"example\",     condition = rep(conditions, each = n_bins),     h_bin_centers = rep(bins, n_conditions),     probability = 0,     density = 1   ) %>%   dplyr::mutate(probability = dplyr::case_when(     condition == \"control\" & h_bin_centers %in% c(1.5, 11.5) ~ 0.75,     condition == \"drug\" & h_bin_centers %in% c(1.5, 11.5) ~ 0.5,     .default = 0   ))  plot_max_probability(   simple_tbl,   x_axis_condition = \"control\",   y_axis_condition = \"drug\",   metric = \"probability\",   xmax = 1,   ymax = 1 )"},{"path":"https://trfore.github.io/matools/reference/plot_probability.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Event Probability Over Time — plot_probability","title":"Plot Event Probability Over Time — plot_probability","text":"Compliments create_histogram_df() generate P() plots time.","code":""},{"path":"https://trfore.github.io/matools/reference/plot_probability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Event Probability Over Time — plot_probability","text":"","code":"plot_probability(   df,   plot_stim_times,   plot_value = \"probability\",   xmax = 40,   ymax = 1,   y_label = NULL,   df_inset = NULL,   sd_value = NULL,   manual_condition_color = NULL,   ... )"},{"path":"https://trfore.github.io/matools/reference/plot_probability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Event Probability Over Time — plot_probability","text":"df Data Frame Tibble following columns: h_bin_centers P() metric create_histogram_df(), e.g. density, probability. plot_stim_times Integer, stimulus times milliseconds. plot_value Character, df column use plotting. Defaults \"probability\". xmax Optional integer, maximum x-value plot milliseconds (ms), values rounded nearest 10. Default 40, xmin fixed 0. ymax Optional integer, maximum y-value plot, values rounded nearest 1. Default 1, ymin fixed 0. y_label Optional character, custom label main y-axis. Default NULL, use column name plot_value. df_inset Optional Data Frame, present inset added plot upper right corner. Default NULL. sd_value Character, df column use plotting error bars. Default NULL. manual_condition_color Character, vector color values. Default NULL, automatically generating color values. ... Optional vargs, apply additional ggplot function calls, e.g. ylim(), ylab(). df_inset NULL, see note .","code":""},{"path":"https://trfore.github.io/matools/reference/plot_probability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Event Probability Over Time — plot_probability","text":"ggplot2 object","code":""},{"path":"https://trfore.github.io/matools/reference/plot_probability.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot Event Probability Over Time — plot_probability","text":"adding inset plot, want add additional ggplot function calls, must add using varg, .... function return grob object. However, df_inset arg left default value NULL, ggplot object returned additional ggplot function calls can added post hoc, e.g. plot_probability() + ylab(\"y-axis label\").","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/plot_probability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Event Probability Over Time — plot_probability","text":"","code":"library(magrittr, include.only = \"%>%\")  # example setup bins <- seq(0.5, 39.5, by = 1) n_bins <- length(bins) conditions <- c(\"control\", \"drug_1\") n_conditions <- length(conditions)  # example output from create_histogram_df() simple_tbl <-   tibble::tibble(     condition = rep(conditions, each = n_bins),     h_bin_centers = rep(bins, n_conditions),     probability = 0   ) %>%   dplyr::mutate(probability = dplyr::case_when(     condition == \"control\" & h_bin_centers %in% c(1.5, 11.5) ~ 1,     condition == \"drug_1\" & h_bin_centers %in% c(1.5, 11.5) ~ 0.5,     .default = 0   ))  plot_probability(   df = simple_tbl,   plot_stim_times = c(0, 10, 20),   plot_value = \"probability\" )"},{"path":"https://trfore.github.io/matools/reference/plot_scatterplot_amplitude.html","id":null,"dir":"Reference","previous_headings":"","what":"Scatter Plot Of Event Amplitudes Over Time — plot_scatterplot_amplitude","title":"Scatter Plot Of Event Amplitudes Over Time — plot_scatterplot_amplitude","text":"Scatter Plot Event Amplitudes Time","code":""},{"path":"https://trfore.github.io/matools/reference/plot_scatterplot_amplitude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scatter Plot Of Event Amplitudes Over Time — plot_scatterplot_amplitude","text":"","code":"plot_scatterplot_amplitude(   df,   sweep_duration,   filename = \"\",   experiment_id = \"\",   monochrome = FALSE,   truncate_x = FALSE,   ymax = NA,   y_label = NULL )"},{"path":"https://trfore.github.io/matools/reference/plot_scatterplot_amplitude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scatter Plot Of Event Amplitudes Over Time — plot_scatterplot_amplitude","text":"df Data frame Tibble, single experiment data set following columns: sweep condition amplitude stimulus sweep_duration Required integer, sweep duration seconds used convert x-axis minutes. filename Optional character, single file name add plot title, defaults \"\". experiment_id Optional character, add subtitle experiment id, defaults \"\". monochrome Boolean, set plot points default black color conditions. Default FALSE, use default ggplot2 color scheme different conditions. truncate_x Boolean, plot points occur condition. Default FALSE, x-axis points plotted. ymax Optional integer, set y-axis limit. Default NULL y-axis automatically determined ggplot. y_label Optional character, custom label y-axis. Default NULL, use df column name, \"amplitude\".","code":""},{"path":"https://trfore.github.io/matools/reference/plot_scatterplot_amplitude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scatter Plot Of Event Amplitudes Over Time — plot_scatterplot_amplitude","text":"ggplot2 object following features: X-axis time (minutes) Y-axis event amplitude (pA)","code":""},{"path":"https://trfore.github.io/matools/reference/plot_scatterplot_amplitude.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scatter Plot Of Event Amplitudes Over Time — plot_scatterplot_amplitude","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  n <- 198 simple_tbl <-   data.frame(     sweep = rep(1:n, each = 1),     condition = rep(c(\"control\", \"wash\", \"drug_1\", \"wash\", \"drug_2\", \"wash\"), each = n / 6),     amplitude = rnorm(n, mean = 75, sd = 5),     stimulus = rep(1, n)   )  simple_tbl <-   simple_tbl %>%   dplyr::mutate(amplitude = ifelse(condition == \"drug_1\", (amplitude - 50), amplitude))  plot_scatterplot_amplitude(   df = simple_tbl,   filename = \"file_01\",   experiment_id = \"experiment\",   sweep_duration = 5,   monochrome = FALSE,   ymax = 100 )   # Limit the x-axis to segments with a pharmacological condition ---- conditions_only_tbl <-   simple_tbl %>%   dplyr::filter(condition %in% c(\"control\", \"drug_1\", \"drug_2\"))  plot_scatterplot_amplitude(   df = conditions_only_tbl,   filename = \"file_01\",   experiment_id = \"experiment\",   sweep_duration = 5,   monochrome = TRUE,   truncate_x = TRUE,   ymax = 100 )"},{"path":"https://trfore.github.io/matools/reference/plot_spike_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Spike Raster Plot — plot_spike_raster","title":"Generate Spike Raster Plot — plot_spike_raster","text":"Generate Spike Raster Plot","code":""},{"path":"https://trfore.github.io/matools/reference/plot_spike_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Spike Raster Plot — plot_spike_raster","text":"","code":"plot_spike_raster(   df,   filename,   id,   time_of_stim,   condition_names,   auto_window = TRUE,   auto_window_size = 10,   auto_window_symmetric = FALSE,   manual_condition_color = NULL,   plot_conditions_only = TRUE )"},{"path":"https://trfore.github.io/matools/reference/plot_spike_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Spike Raster Plot — plot_spike_raster","text":"df Data Frame Tibble following columns: sweep time_ms condition filename Character, single file name. id Character, experiment id. time_of_stim List, stimulus times milliseconds. condition_names Character vector condition titles. auto_window Boolean, automatically set x-axis values based upon first last stimuli. Default TRUE use args auto_window_size auto_window_symmetric set x-axis. FALSE, entire x-axis plotted using values c(0, NA). auto_window_size Integer, amount time milliseconds plot last stimulus. Default 10 ms. auto_window_symmetric Boolean, set x-axis plot auto_window_size first last stimuli. Default FALSE, start x-axis first stimuli. manual_condition_color Character, vector color values. Default NULL, force arg auto_condition_color TRUE, automatically generating color values. plot_conditions_only Boolean, Default TRUE.","code":""},{"path":"https://trfore.github.io/matools/reference/plot_spike_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Spike Raster Plot — plot_spike_raster","text":"ggplot object","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/plot_spike_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Spike Raster Plot — plot_spike_raster","text":"","code":"conditions <- c(\"control\", \"drug_1\", \"drug_2\") simple_df <-   data.frame(     sweep = rep(1:120, each = 3),     time_ms = rep(c(280, 290, 300), times = 120),     condition = rep(conditions, each = 120)   )  plot_spike_raster(   df = simple_df,   filename = \"example\",   id = \"experiment_id\",   time_of_stim = c(278.18, 288.18, 298.18),   condition_names = conditions,   auto_window = TRUE,   auto_window_size = 30,   auto_window_symmetric = FALSE,   plot_conditions_only = TRUE )"},{"path":"https://trfore.github.io/matools/reference/reset_pkg_environment.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset 'matools' Environment — reset_pkg_environment","title":"Reset 'matools' Environment — reset_pkg_environment","text":"wrapper set_pkg_environment","code":""},{"path":"https://trfore.github.io/matools/reference/reset_pkg_environment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset 'matools' Environment — reset_pkg_environment","text":"","code":"reset_pkg_environment()"},{"path":"https://trfore.github.io/matools/reference/reset_pkg_environment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset 'matools' Environment — reset_pkg_environment","text":"new environment(), matools_env, .GlobalEnv namespace.","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/reset_pkg_environment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset 'matools' Environment — reset_pkg_environment","text":"","code":"library(matools)  # create an environment and add objects ---- set_pkg_environment(force_new = TRUE) matools_env$parameter_1 <- TRUE matools_env$parameter_2 <- FALSE ls(matools_env) #> [1] \"parameter_1\" \"parameter_2\"  # reset the environment ---- reset_pkg_environment() rm(matools_env, envir = .GlobalEnv)"},{"path":"https://trfore.github.io/matools/reference/sequential_condition_sweeps.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequential Condition Sweeps — sequential_condition_sweeps","title":"Sequential Condition Sweeps — sequential_condition_sweeps","text":"Sequential Condition Sweeps","code":""},{"path":"https://trfore.github.io/matools/reference/sequential_condition_sweeps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequential Condition Sweeps — sequential_condition_sweeps","text":"","code":"sequential_condition_sweeps(df, condition_names)"},{"path":"https://trfore.github.io/matools/reference/sequential_condition_sweeps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequential Condition Sweeps — sequential_condition_sweeps","text":"df Data Frame Tibble, following columns: * sweep * condition condition_names Character vector condition names.","code":""},{"path":"https://trfore.github.io/matools/reference/sequential_condition_sweeps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequential Condition Sweeps — sequential_condition_sweeps","text":"Data Frame Tibble, additional column: * trial","code":""},{"path":"https://trfore.github.io/matools/reference/sequential_condition_sweeps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sequential Condition Sweeps — sequential_condition_sweeps","text":"Creates 'trial' column sequential trial numbers across conditions. original sweep value overwritten.","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/set_data_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Data Directory — set_data_directory","title":"Set Data Directory — set_data_directory","text":"Extracts data directory, parent names data files (*.asc) within directory. aid creating analysis pipeline.","code":""},{"path":"https://trfore.github.io/matools/reference/set_data_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Data Directory — set_data_directory","text":"","code":"set_data_directory(file_path = NULL)"},{"path":"https://trfore.github.io/matools/reference/set_data_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Data Directory — set_data_directory","text":"file_path Optional path data directory. Defaults NULL opens GUI directory selection.","code":""},{"path":"https://trfore.github.io/matools/reference/set_data_directory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Data Directory — set_data_directory","text":"Environment variables matools_env: directory_data directory_parent files_in_folder","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/set_data_directory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Data Directory — set_data_directory","text":"","code":"library(matools)  set_pkg_environment() set_data_directory(file_path = getwd()) print(matools_env$directory_data) #> [1] \"/home/runner/work/matools/matools/docs/reference\""},{"path":"https://trfore.github.io/matools/reference/set_experiment_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Experiment Parameters — set_experiment_parameters","title":"Set Experiment Parameters — set_experiment_parameters","text":"Pulls file specific parameters (.e. drug start times) parameters data frame, allowing analysis f() based upon individual experiment settings.","code":""},{"path":"https://trfore.github.io/matools/reference/set_experiment_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Experiment Parameters — set_experiment_parameters","text":"","code":"set_experiment_parameters(   parameters,   filename,   condition_names = lifecycle::deprecated() )"},{"path":"https://trfore.github.io/matools/reference/set_experiment_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Experiment Parameters — set_experiment_parameters","text":"parameters Experiment parameters df imported using import_experiment_parameters function. filename Character, single file name condition_names :Character vector condition titles","code":""},{"path":"https://trfore.github.io/matools/reference/set_experiment_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Experiment Parameters — set_experiment_parameters","text":"environment variables matools_env: experiment_id chr stimulus_time_of_first dbl stimulus_count int stimulus_isi int stimulus_time_of_recovery dbl event_threshold int sweep_total int sweep_duration_sec int condition_names chr condition_starts list condition_ends list condition_drug_startslifecycle::badge(\"deprecated\")","code":""},{"path":"https://trfore.github.io/matools/reference/set_pkg_environment.html","id":null,"dir":"Reference","previous_headings":"","what":"Create An New 'matools' Environment To Store Analysis Parameters — set_pkg_environment","title":"Create An New 'matools' Environment To Store Analysis Parameters — set_pkg_environment","text":"Provides location store package objects variables, allowing easy removal data analysis parameters within analysis pipeline. Note: sets parent environment env: empty avoid scope escape.","code":""},{"path":"https://trfore.github.io/matools/reference/set_pkg_environment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create An New 'matools' Environment To Store Analysis Parameters — set_pkg_environment","text":"","code":"set_pkg_environment(force_new = FALSE)"},{"path":"https://trfore.github.io/matools/reference/set_pkg_environment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create An New 'matools' Environment To Store Analysis Parameters — set_pkg_environment","text":"force_new Boolean, TRUE new matools_env created, overwriting existing parameters. Default FALSE.","code":""},{"path":"https://trfore.github.io/matools/reference/set_pkg_environment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create An New 'matools' Environment To Store Analysis Parameters — set_pkg_environment","text":"new environment(), matools_env, .GlobalEnv namespace.","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/set_pkg_environment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create An New 'matools' Environment To Store Analysis Parameters — set_pkg_environment","text":"","code":"library(matools)  set_pkg_environment(force_new = TRUE) print(matools_env) #> <environment: 0x5584847d2ea0> rm(matools_env, envir = .GlobalEnv)"},{"path":"https://trfore.github.io/matools/reference/standardize_event_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize Event Time To Discrete Time — standardize_event_time","title":"Standardize Event Time To Discrete Time — standardize_event_time","text":"converting continuous time discrete time series functions plot sweeps calculate events stimuli within sweeps.","code":""},{"path":"https://trfore.github.io/matools/reference/standardize_event_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize Event Time To Discrete Time — standardize_event_time","text":"","code":"standardize_event_time(df, sweep_duration, time_ref = \"rec_time_ms\")"},{"path":"https://trfore.github.io/matools/reference/standardize_event_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize Event Time To Discrete Time — standardize_event_time","text":"df Data Frame Tibble sweep column sweep_duration Numeric, sweep/trial length seconds. time_ref Character, event time reference point column name. Defaults \"rec_time_ms\".","code":""},{"path":"https://trfore.github.io/matools/reference/standardize_event_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize Event Time To Discrete Time — standardize_event_time","text":"Data Frame Tibble transformed time column, time_ms.","code":""},{"path":[]},{"path":"https://trfore.github.io/matools/reference/standardize_event_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize Event Time To Discrete Time — standardize_event_time","text":"","code":"simple_df <- data.frame(   rec_time_ms = c(400, 4400),   sweep = ordered(c(1, 5), levels = c(1:5)) )  standardize_event_time(   df = simple_df,   sweep_duration = 1,   time_ref = \"rec_time_ms\" ) #>   rec_time_ms sweep time_ms #> 1         400     1     400 #> 2        4400     5     400 if (FALSE) { df <- standardize_event_time(   df,   matools_env$sweep_duration_sec,   \"rec_time_ms\" ) }"}]
