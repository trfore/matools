% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_scatter.R
\name{plot_scatterplot_amplitude}
\alias{plot_scatterplot_amplitude}
\title{Scatter Plot Of Event Amplitudes Over Time}
\usage{
plot_scatterplot_amplitude(
  df,
  sweep_duration,
  filename = "",
  experiment_id = "",
  monochrome = FALSE,
  truncate_x = FALSE,
  ymax = NA,
  y_label = NULL
)
}
\arguments{
\item{df}{Data frame or Tibble, a single experiment data set with the following columns:
\itemize{
\item sweep
\item condition
\item amplitude
\item stimulus
}}

\item{sweep_duration}{Required integer, sweep duration in seconds that is used to convert the x-axis into minutes.}

\item{filename}{Optional character, a single file name to add to the plot title, defaults to "".}

\item{experiment_id}{Optional character, add a subtitle with experiment id, defaults to "".}

\item{monochrome}{Boolean, set all plot points to a default black color for all conditions. Default is \code{FALSE},
which will use default ggplot2 color scheme for different conditions.}

\item{truncate_x}{Boolean, only plot points that occur during a condition. Default is \code{FALSE}, and all x-axis
points will be plotted.}

\item{ymax}{Optional integer, set a y-axis limit. Default is \code{NULL} and the y-axis will be automatically
determined by ggplot.}

\item{y_label}{Optional character, custom label for the y-axis. Default \code{NULL}, will use the
df column name, "amplitude".}
}
\value{
A ggplot2 object with the following features:
\itemize{
\item X-axis of time (minutes)
\item Y-axis of event amplitude (pA)
}
}
\description{
Scatter Plot Of Event Amplitudes Over Time
}
\examples{
library(dplyr)

n <- 198
simple_tbl <-
  data.frame(
    sweep = rep(1:n, each = 1),
    condition = rep(c("control", "wash", "drug_1", "wash", "drug_2", "wash"), each = n / 6),
    amplitude = rnorm(n, mean = 75, sd = 5),
    stimulus = rep(1, n)
  )

simple_tbl <-
  simple_tbl \%>\%
  dplyr::mutate(amplitude = ifelse(condition == "drug_1", (amplitude - 50), amplitude))

plot_scatterplot_amplitude(
  df = simple_tbl,
  filename = "file_01",
  experiment_id = "experiment",
  sweep_duration = 5,
  monochrome = FALSE,
  ymax = 100
)

# Limit the x-axis to segments with a pharmacological condition ----
conditions_only_tbl <-
  simple_tbl \%>\%
  dplyr::filter(condition \%in\% c("control", "drug_1", "drug_2"))

plot_scatterplot_amplitude(
  df = conditions_only_tbl,
  filename = "file_01",
  experiment_id = "experiment",
  sweep_duration = 5,
  monochrome = TRUE,
  truncate_x = TRUE,
  ymax = 100
)

}
