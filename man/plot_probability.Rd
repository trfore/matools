% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_probability.R
\name{plot_probability}
\alias{plot_probability}
\title{Plot Event Probability Over Time}
\usage{
plot_probability(
  df,
  plot_stim_times,
  plot_value = "probability",
  xmax = 40,
  ymax = 1,
  y_label = NULL,
  df_inset = NULL,
  sd_value = NULL,
  manual_condition_color = NULL,
  ...
)
}
\arguments{
\item{df}{Data Frame or Tibble with the following columns:
\itemize{
\item h_bin_centers
\item P() metric from \code{create_histogram_df()}, e.g. density, probability.
}}

\item{plot_stim_times}{Integer, stimulus times in milliseconds.}

\item{plot_value}{Character, \code{df} column to use for plotting. Defaults to
"probability".}

\item{xmax}{Optional integer, maximum x-value to plot in milliseconds (ms), values are rounded to
the nearest 10. Default is \code{40}, xmin is fixed at \code{0}.}

\item{ymax}{Optional integer, maximum y-value to plot, values are rounded the nearest 1. Default
is \code{1}, ymin is fixed at \code{0}.}

\item{y_label}{Optional character, custom label for the main y-axis. Default \code{NULL}, will use
the column name from \code{plot_value}.}

\item{df_inset}{Optional Data Frame, if present a inset is added to the plot in the upper right
corner. Default is \code{NULL}.}

\item{sd_value}{Character, \code{df} column to use for plotting error bars. Default is
\code{NULL}.}

\item{manual_condition_color}{Character, vector of color values. Default is \code{NULL}, which
will automatically generating color values.}

\item{...}{Optional vargs, to apply additional ggplot function calls, e.g. \code{ylim()},
\code{ylab()}. If \code{df_inset} is \code{NULL}, see note below.}
}
\value{
ggplot2 object
}
\description{
Compliments \code{create_histogram_df()} to generate P() plots over time.
}
\note{
When adding an inset to the plot, if you want to add additional ggplot function calls, you
must add these using the varg, \code{...}. As this function will return a \code{grob}
object. However, if the \code{df_inset} arg is left at the default value of \code{NULL},
then a ggplot object is returned and additional ggplot function calls can added post hoc, e.g.
\code{plot_probability() + ylab("y-axis label")}.
}
\examples{
library(magrittr, include.only = "\%>\%")

# example setup
bins <- seq(0.5, 39.5, by = 1)
n_bins <- length(bins)
conditions <- c("control", "drug_1")
n_conditions <- length(conditions)

# example output from create_histogram_df()
simple_tbl <-
  tibble::tibble(
    condition = rep(conditions, each = n_bins),
    h_bin_centers = rep(bins, n_conditions),
    probability = 0
  ) \%>\%
  dplyr::mutate(probability = dplyr::case_when(
    condition == "control" & h_bin_centers \%in\% c(1.5, 11.5) ~ 1,
    condition == "drug_1" & h_bin_centers \%in\% c(1.5, 11.5) ~ 0.5,
    .default = 0
  ))

plot_probability(
  df = simple_tbl,
  plot_stim_times = c(0, 10, 20),
  plot_value = "probability"
)

}
\seealso{
\itemize{
\item \code{\link[=create_histogram_df]{create_histogram_df()}}
\item \code{\link[=plot_max_probability]{plot_max_probability()}}
}
}
