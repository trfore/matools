% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{import_check_missing_info}
\alias{import_check_missing_info}
\title{Import Check For Matching Data Files To Experimental Parameters}
\usage{
import_check_missing_info(dir_filenames, parameters, skip_prompt = FALSE)
}
\arguments{
\item{dir_filenames}{Character vector of files within the working directory}

\item{parameters}{Data frame with experimental parameters}

\item{skip_prompt}{Logical, skips warning messages and user prompts, automatically will remove files missing
parameters from the \code{files_to_process} list. Defaults to \code{FALSE}.}
}
\value{
Character vector \code{files_to_process} in the \code{matools_env}.
}
\description{
Indicates a disparity between files present and/or parameters. Returns warning message with missing
file information and allows user to exclude processing data that are missing either the data file or experimental
parameters. This is important, as helper functions, \link{import_experiment_parameters}, can generate environment
variables from these parameters, and analysis function arguments can easily point to those values.
}
\examples{
\dontrun{
library(matools)

set_pkg_environment()
set_data_directory()
import_experiment_parameters()
import_check_missing_info(
  matools_env$files_in_folder,
  matools_env$parameters
)

print(matools_env$files_to_process)
}

}
\seealso{
\itemize{
\item \link{set_pkg_environment} to generate the required \code{matools_env}.
\item \link{set_data_directory} to auto generate a vector of file names \code{matools_env$files_in_folder}.
\item \link{import_experiment_parameters} to auto generate a data.frame of parameters \code{matools_env$parameters}.
\item \link{analysis_evoked_ap} or \link{analysis_evoked_psp} for example workflows.
}
}
