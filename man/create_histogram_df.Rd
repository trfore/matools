% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_processing.R
\name{create_histogram_df}
\alias{create_histogram_df}
\title{Create Data Frame With Histogram Values}
\usage{
create_histogram_df(
  df,
  time_of_stim,
  condition_names,
  bin_size = 1,
  window_size,
  first_bin_on_stim = FALSE,
  one_event_per_bin = FALSE
)
}
\arguments{
\item{df}{Data Frame or Tibble with the following columns:
\itemize{
\item time_ms
\item sweep
\item condition
\item stimulus
\item event_index
}}

\item{time_of_stim}{List, with event times in milliseconds.}

\item{condition_names}{Character, vector with condition titles.}

\item{bin_size}{Integer, histogram bin width size in milliseconds. Default is '1'.}

\item{window_size}{Integer, in milliseconds the size of the window to use for the histogram, the start of the window
will be at the first stimulus.}

\item{first_bin_on_stim}{Logical, if \code{TRUE} the first bin center will occur on the first stimulus, i.e. 0.
Default is \code{FALSE}.}

\item{one_event_per_bin}{Logical, if \code{TRUE} only a single event will be counted for each bin. Default is
\code{FALSE}.}
}
\value{
Tibble with the following columns:
\itemize{
\item \code{condition} - character
\item \code{count_events} - integer
\item \code{count_sweeps} - integer
\item \code{h_counts} - nested list of integers
\item \code{h_density} - nested list of doubles
\item \code{h_bin_centers} - nested list of doubles
\item \code{probability} - nested list of doubles
\item \code{h_count_norm_max} - nested list of doubles
\item \code{h_prob_norm_max} - nested list of doubles
}
}
\description{
Generates a data.frame of binned values, binning starts at the first stimulus, e.g. 0 ms, and ends at
\code{window_size}.
}
\note{
This only returns a tibble. Histogram related columns are nested, which facilitates
aggregating the output into a tibble for future comparison across experiments. See code example
using \code{dplyr::select} and \code{tidyr::unnest} for working with this functions output.
}
\examples{
library(magrittr, include.only = "\%>\%")

simple_df <- data.frame(
  time_ms = rep(c(417, 427), 10),
  sweep = rep(c(1:10), each = 2),
  condition = rep("control", 10),
  stimulus = rep(c(1, 2), 10),
  event_index = 1
)

df_output <-
  create_histogram_df(
    df = simple_df,
    time_of_stim = c(415.5, 425.5),
    condition_names = c("control", "drug1"),
    bin_size = 1,
    window_size = 20,
    first_bin_on_stim = FALSE,
    one_event_per_bin = FALSE
  )

df_output \%>\%
  dplyr::select(
    condition, h_counts, h_density, h_bin_centers, probability, h_count_norm_max, h_prob_norm_max
  ) \%>\%
  tidyr::unnest(c(
    h_counts, h_density, h_bin_centers, probability, h_count_norm_max, h_prob_norm_max
  ))

}
\seealso{
\itemize{
\item \code{\link[=analysis_evoked_ap]{analysis_evoked_ap()}} for a workflow example that aggregates this functions output.
}
}
