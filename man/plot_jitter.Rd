% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_jitter.R
\name{plot_jitter}
\alias{plot_jitter}
\title{Plot Spike Jitter}
\usage{
plot_jitter(df, group_value = "condition", ymax = 8, sd_value = NULL, ...)
}
\arguments{
\item{df}{Data frame or Tibble, a single experiment data set with the following columns:
\itemize{
\item condition
\item stimulus
\item jitter
\item event_index
}}

\item{group_value}{Character, column name to use for grouping. Default is \code{"condition"}.}

\item{ymax}{Optional integer, maximum y-value to plot in milliseconds (ms). Default is \code{8}.}

\item{sd_value}{Optional character, std deviation measurement to use, accepts "sd" or "sem". Default is \code{NULL}.}

\item{...}{Optional vargs, to apply additional ggplot function calls, e.g. \code{ylim()}, \code{ylab()}.}
}
\value{
A ggplot2 object with the following features:
\itemize{
\item X-axis of binned events by stimulus value.
\item Y-axis of action potential latency (jitter) in milliseconds.
}
}
\description{
Plot Spike Jitter
}
\examples{
n <- 100 # sweeps
n_stim <- 2 # stimuli per sweep
conditions <- c("control", "drug_1")
n_conditions <- length(conditions)

simple_tbl <-
  data.frame(
    experiment_id = rep("example", ((n * n_stim * n_conditions))),
    condition = rep(conditions, rep((n * n_stim), n_conditions)),
    stimulus = rep(c(1:n_stim), n * n_conditions),
    jitter = rep(rnorm((n * n_stim), 2, 1), n_conditions),
    event_index = rep(1, ((n * n_stim * n_conditions)))
  )

plot_jitter(
  simple_tbl,
  ymax = 4,
  sd_value = "sd"
)

# change the default color scheme ----
plot_jitter(
  simple_tbl,
  group_value = "condition",
  ymax = 4,
  sd_value = "sem",
  ggplot2::scale_color_manual(values = c("black", "blue"))
)

}
